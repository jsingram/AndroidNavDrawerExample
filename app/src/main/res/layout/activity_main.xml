<?xml version="1.0" encoding="utf-8"?>
<!-- TODO: [Step 2] Replace your root layout with a DrawerLayout -->
<!-- Use DrawerLayout as root container for activity -->
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <!-- Layout to contain contents of main body of screen (drawer will slide over this) -->
    <FrameLayout
        android:id="@+id/content_frame"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

    <!-- If you want your UI to meet the material design guidlines you'll need your nav drawer
         to appear in front of your app's app bar. To do this, you'll have to set your app to a
         theme that does not have a built-in app bar and create a Toolbar instead. -->
    <!-- TODO: [Step 10] Add a ToolBar to the layout -->
    <android.support.v7.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary"
        android:theme="@style/ThemeOverlay.AppCompat.ActionBar" />

    <!-- Container for contents of drawer - use NavigationView to make configuration easier -->
    <!-- TODO: [Step 3] Add a menu resource to configure the menu items listed in the drawer. -->
    <!-- TODO: [Step 5] Add a header to your nav drawer by specifying a layout with the app:headerLayout attribute.  -->
    <android.support.design.widget.NavigationView
        android:id="@+id/nav_view"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:fitsSystemWindows="true"
        app:menu="@menu/drawer_view"
        app:headerLayout="@layout/nav_header"
        />

</android.support.v4.widget.DrawerLayout>